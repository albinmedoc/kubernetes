apiVersion: apps/v1
kind: Deployment
metadata:
  name: authentik-server
  namespace: authentik
spec:
  replicas: 1
  selector:
    matchLabels:
      app: authentik-server
  template:
    metadata:
      labels:
        app: authentik-server
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: authentik-server
          image: ghcr.io/goauthentik/server:latest
          args:
            - server
          env:
            - name: AUTHENTIK_POSTGRESQL__HOST
              value: postgres.authentik.svc.cluster.local
            - name: AUTHENTIK_REDIS__HOST
              value: redis.authentik.svc.cluster.local
            - name: AUTHENTIK_POSTGRESQL__NAME
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_DB
            - name: AUTHENTIK_POSTGRESQL__USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: AUTHENTIK_POSTGRESQL__PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: AUTHENTIK_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: authentik-secret
                  key: AUTHENTIK_SECRET_KEY
          ports:
            - containerPort: 9000
          volumeMounts:
            - mountPath: /media
              subPath: media
              name: authentik-data
            - mountPath: /templates
              subPath: custom-templates
              name: authentik-data
      volumes:
        - name: authentik-data
          persistentVolumeClaim:
            claimName: authentik-pvc